"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8447],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>E});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var m=r.createContext({}),s=function(e){var n=r.useContext(m),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=s(e.components);return r.createElement(m.Provider,{value:n},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,m=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=s(t),d=a,E=p["".concat(m,".").concat(d)]||p[d]||u[d]||o;return t?r.createElement(E,i(i({ref:n},c),{},{components:t})):r.createElement(E,i({ref:n},c))}));function E(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=d;var l={};for(var m in n)hasOwnProperty.call(n,m)&&(l[m]=n[m]);l.originalType=e,l[p]="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=t[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},7555:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>m,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var r=t(7462),a=(t(7294),t(3905));const o={sidebar_position:1},i=void 0,l={unversionedId:"sql/\u7bc4\u4f8b-leetcode-SQL/day2-196. Delete Duplicate Emails",id:"sql/\u7bc4\u4f8b-leetcode-SQL/day2-196. Delete Duplicate Emails",title:"day2-196. Delete Duplicate Emails",description:"",source:"@site/docs/03.sql/4.\u7bc4\u4f8b-leetcode-SQL/day2-196. Delete Duplicate Emails.mdx",sourceDirName:"03.sql/4.\u7bc4\u4f8b-leetcode-SQL",slug:"/sql/\u7bc4\u4f8b-leetcode-SQL/day2-196. Delete Duplicate Emails",permalink:"/myBlog_docusaurus/docs/sql/\u7bc4\u4f8b-leetcode-SQL/day2-196. Delete Duplicate Emails",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"day2-1873. Calculate Special Bonus",permalink:"/myBlog_docusaurus/docs/sql/\u7bc4\u4f8b-leetcode-SQL/day2-1873. Calculate Special Bonus"},next:{title:"day2-627. Swap Salary",permalink:"/myBlog_docusaurus/docs/sql/\u7bc4\u4f8b-leetcode-SQL/day2-627. Swap Salary"}},m={},s=[],c={toc:s},p="wrapper";function u(e){let{components:n,...t}=e;return(0,a.kt)(p,(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"/*\nTable: Person\n\n+-------------+---------+\n| Column Name | Type    |\n+-------------+---------+\n| id          | int     |\n| email       | varchar |\n+-------------+---------+\nid is the primary key column for this table.\nEach row of this table contains an email. The emails will not contain uppercase letters.\n \n\nWrite an SQL query to delete all the duplicate emails, keeping only one unique email with the smallest id. Note that you are supposed to write a DELETE statement and not a SELECT one.\n\nAfter running your script, the answer shown is the Person table. The driver will first compile and run your piece of code and then show the Person table. The final order of the Person table does not matter.\n\nThe query result format is in the following example.\n\n \n\nExample 1:\n\nInput: \nPerson table:\n+----+------------------+\n| id | email            |\n+----+------------------+\n| 1  | john@example.com |\n| 2  | bob@example.com  |\n| 3  | john@example.com |\n+----+------------------+\nOutput: \n+----+------------------+\n| id | email            |\n+----+------------------+\n| 1  | john@example.com |\n| 2  | bob@example.com  |\n+----+------------------+\nExplanation: john@example.com is repeated two times. We keep the row with the smallest Id = 1.\n*/\n# Please write a DELETE statement and DO NOT write a SELECT statement.\n# Write your MySQL query statement below\nDELETE p1\nFROM Person p1, Person p2\nWHERE p1.email = p2.email AND p1.id > p2.id;\n\n-- \u7b2c\u4e8c\u7a2e\nWITH cte AS (\n    SELECT \n        id, \n        email, \n        ROW_NUMBER() OVER (\n            PARTITION BY email\n            ORDER BY id\n        ) row_num\n    FROM \n        Person\n)\nDELETE FROM Person\nWHERE id IN (\n    SELECT id\n    FROM cte\n    WHERE row_num > 1\n);\n\n/*\nskill:\n\n1. \u540c\u4e00\u500b\u8868 FROM \u5169\u6b21\n2. cte - common table expression \u901a\u7528\u8cc7\u6599\u8868\u904b\u7b97\u5f0f (\u66ab\u5b58\u5177\u540d\u7d50\u679c\u96c6)\n   ROW_NUMBER() OVER - \u6392\u5e8f\u51fd\u6578\n\u5206\u7d44\u6392\u5e8f PARTITION BY\n\u53c3\u8003\u8cc7\u6599 : SQL Server \u5be6\u7528\u7684\u6392\u5e8f\u51fd\u6578 ROW_NUMBER() https://ithelp.ithome.com.tw/articles/10225653\n\n\n*/\n\nDELETE p1 \nFROM Person p1\nLEFT JOIN (SELECT MIN(id) as min_id, email FROM Person GROUP BY email) p2 ON p1.id = p2.min_id\nWHERE p2.email IS NULL;\n\n\n/*\n\u9996\u5148\uff0c\u4f7f\u7528\u4ee5\u4e0b SQL \u8a9e\u53e5\u627e\u51fa\u91cd\u8907\u7684\u96fb\u5b50\u90f5\u4ef6\uff1a\n\nWITH cte AS (\n    SELECT \n        id, \n        email, \n        ROW_NUMBER() OVER (\n            PARTITION BY email\n            ORDER BY id\n        ) row_num\n    FROM \n        Person\n)\nSELECT \n    id, \n    email\nFROM \n    cte\nWHERE \n    row_num > 1;\n\n\u9019\u500b SQL \u8a9e\u53e5\u6703\u70ba\u6bcf\u500b\u91cd\u8907\u7684\u96fb\u5b50\u90f5\u4ef6\u5efa\u7acb\u4e00\u500b\u65b0\u7684\u884c\uff0c\u4e26\u4f7f\u7528 ROW_NUMBER() \u51fd\u6578\u4f86\u70ba\u6bcf\u500b\u884c\u7de8\u865f\uff0c\u4ee5\u4fbf\u6211\u5011\u53ef\u4ee5\u4fdd\u7559\u6bcf\u500b\u91cd\u8907\u7d44\u7684\u7b2c\u4e00\u500b\u884c\u3002\u9019\u500b\u67e5\u8a62\u6703\u8fd4\u56de\u6240\u6709\u91cd\u8907\u7684\u96fb\u5b50\u90f5\u4ef6\u4ee5\u53ca\u5b83\u5011\u7684 id\u3002\n\n\u63a5\u4e0b\u4f86\uff0c\u6211\u5011\u53ef\u4ee5\u5c07\u4e0a\u9762\u7684 SQL \u67e5\u8a62\u5de2\u72c0\u5230 DELETE \u8a9e\u53e5\u4e2d\uff0c\u4ee5\u4fbf\u522a\u9664\u6240\u6709\u91cd\u8907\u7684\u884c\uff0c\u4f46\u4fdd\u7559\u6bcf\u500b\u91cd\u8907\u7d44\u7684\u7b2c\u4e00\u500b\u884c\uff1a\n\nWITH cte AS (\n    SELECT \n        id, \n        email, \n        ROW_NUMBER() OVER (\n            PARTITION BY email\n            ORDER BY id\n        ) row_num\n    FROM \n        Person\n)\nDELETE FROM Person\nWHERE id IN (\n    SELECT id\n    FROM cte\n    WHERE row_num > 1\n);\n\n\u9019\u500b SQL \u8a9e\u53e5\u6703\u5f9e Person \u8868\u683c\u4e2d\u522a\u9664\u6240\u6709\u91cd\u8907\u884c\uff0c\u4f46\u4fdd\u7559\u6bcf\u500b\u91cd\u8907\u7d44\u7684\u7b2c\u4e00\u884c\u3002\n\n\u9019\u662f\u4e00\u500b\u6bd4\u8f03\u901a\u7528\u4e14\u9748\u6d3b\u7684\u65b9\u6cd5\uff0c\u53ef\u4ee5\u8655\u7406\u66f4\u8907\u96dc\u7684\u522a\u9664\u91cd\u8907\u8cc7\u6599\u7684\u9700\u6c42\u3002\n*/\n/*\n-- \u53c3\u8003\u8cc7\u6599 : https://www.sqlservertutorial.net/sql-server-basics/delete-duplicates-sql-server/\nWITH cte AS (\n    SELECT \n        contact_id, \n        first_name, \n        last_name, \n        email, \n        ROW_NUMBER() OVER (\n            PARTITION BY \n                first_name, \n                last_name, \n                email\n            ORDER BY \n                first_name, \n                last_name, \n                email\n        ) row_num\n     FROM \n        contacts\n)\nSELECT * FROM CTE;\n\n| contact_id | first_name | last_name   | email                        | row_num |\n|------------|------------|-------------|------------------------------|---------|\n| 2          | Catherine  | Abel        | catherine.abel@example.com   | 1       |\n| 6          | Hazem      | Abolrous    | hazem.abolrous@example.com   | 1       |\n| 7          | Hazem      | Abolrous    | hazem.abolrous@example.com   | 2       |\n| 8          | Humberto   | Acevedo     | humberto.acevedo@example.com | 1       |\n| 9          | Humberto   | Acevedo     | humberto.acevedo@example.com | 2       |\n| 3          | Kim        | Abercrombie | kim.abercrombie@example.com  | 1       |\n| 4          | Kim        | Abercrombie | kim.abercrombie@example.com  | 2       |\n| 5          | Kim        | Abercrombie | kim.abercrombie@example.com  | 3       |\n| 10         | Pilar      | Ackerman    | pilar.ackerman@example.com   | 1       |\n| 1          | Syed       | Abbas       | syed.abbas@example.com       | 1       |\n\n*/\n")))}u.isMDXComponent=!0}}]);