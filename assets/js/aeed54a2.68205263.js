"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8425],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>u});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=r.createContext({}),m=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},p=function(e){var n=m(e.components);return r.createElement(s.Provider,{value:n},e.children)},y="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},c=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),y=m(t),c=o,u=y["".concat(s,".").concat(c)]||y[c]||d[c]||i;return t?r.createElement(u,a(a({ref:n},p),{},{components:t})):r.createElement(u,a({ref:n},p))}));function u(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=c;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[y]="string"==typeof e?e:o,a[1]=l;for(var m=2;m<i;m++)a[m]=t[m];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}c.displayName="MDXCreateElement"},3776:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>m});var r=t(7462),o=(t(7294),t(3905));const i={sidebar_position:1},a=void 0,l={unversionedId:"sql/\u7bc4\u4f8b-leetcode-SQL/day4-1965. Employees With Missing Information",id:"sql/\u7bc4\u4f8b-leetcode-SQL/day4-1965. Employees With Missing Information",title:"day4-1965. Employees With Missing Information",description:"",source:"@site/docs/03.sql/4.\u7bc4\u4f8b-leetcode-SQL/day4-1965. Employees With Missing Information.mdx",sourceDirName:"03.sql/4.\u7bc4\u4f8b-leetcode-SQL",slug:"/sql/\u7bc4\u4f8b-leetcode-SQL/day4-1965. Employees With Missing Information",permalink:"/myBlog_docusaurus/docs/sql/\u7bc4\u4f8b-leetcode-SQL/day4-1965. Employees With Missing Information",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"day4-1795. Rearrange Products Table",permalink:"/myBlog_docusaurus/docs/sql/\u7bc4\u4f8b-leetcode-SQL/day4-1795. Rearrange Products Table"},next:{title:"day4-608. Tree Node",permalink:"/myBlog_docusaurus/docs/sql/\u7bc4\u4f8b-leetcode-SQL/day4-608. Tree Node"}},s={},m=[],p={toc:m},y="wrapper";function d(e){let{components:n,...t}=e;return(0,o.kt)(y,(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sql"},"/*\nTable: Employees\n\n+-------------+---------+\n| Column Name | Type    |\n+-------------+---------+\n| employee_id | int     |\n| name        | varchar |\n+-------------+---------+\nemployee_id is the primary key for this table.\nEach row of this table indicates the name of the employee whose ID is employee_id.\n \n\nTable: Salaries\n\n+-------------+---------+\n| Column Name | Type    |\n+-------------+---------+\n| employee_id | int     |\n| salary      | int     |\n+-------------+---------+\nemployee_id is the primary key for this table.\nEach row of this table indicates the salary of the employee whose ID is employee_id.\n \n\nWrite an SQL query to report the IDs of all the employees with missing information. The information of an employee is missing if:\n\nThe employee's name is missing, or\nThe employee's salary is missing.\nReturn the result table ordered by employee_id in ascending order.\n\nThe query result format is in the following example.\n\n \n\nExample 1:\n\nInput: \nEmployees table:\n+-------------+----------+\n| employee_id | name     |\n+-------------+----------+\n| 2           | Crew     |\n| 4           | Haven    |\n| 5           | Kristian |\n+-------------+----------+\nSalaries table:\n+-------------+--------+\n| employee_id | salary |\n+-------------+--------+\n| 5           | 76071  |\n| 1           | 22517  |\n| 4           | 63539  |\n+-------------+--------+\nOutput: \n+-------------+\n| employee_id |\n+-------------+\n| 1           |\n| 2           |\n+-------------+\nExplanation: \nEmployees 1, 2, 4, and 5 are working at this company.\nThe name of employee 1 is missing.\nThe salary of employee 2 is missing.\n*/\n\n# Write your MySQL query statement below\nSELECT employee_id\nFROM Employees AS E\nLEFT JOIN (\n     SELECT employee_id AS e_id , salary\n     FROM Salaries\n) AS S ON S.e_id = E.employee_id\nWHERE name IS NULL OR salary is NULL\nUNION\nSELECT employee_id\nFROM Salaries AS S\nLEFT JOIN (\n     SELECT employee_id AS e_id , name\n     FROM Employees\n) AS E ON E.e_id = S.employee_id\nWHERE name IS NULL OR salary is NULL\nORDER BY employee_id ASC\n\n/*\n\nnote : MySQL \u6c92\u6709 FULL OUTER JOIN \u9700\u8981\u7528 UNION\nex : \nSELECT * FROM t1\nLEFT JOIN t2 ON t1.id = t2.id\nUNION\nSELECT * FROM t1\nRIGHT JOIN t2 ON t1.id = t2.id\n\nskill: UNION \u7d50\u5408 LEFT JOIN , RIGHT JOIN , \u53e6\u5916\u9700\u6ce8\u610f\u5169\u500b table \u90fd\u6709 employee_id field\n\n*/\n\n/*\n\n\u7db2\u8def\u89e3\u6cd5\nSELECT employee_id\nFROM Employees\nWHERE employee_id  NOT IN (SELECT employee_id FROM Salaries)\nUNION\nSELECT employee_id\nFROM Salaries\nWHERE employee_id  NOT IN (SELECT employee_id FROM Employees)\nORDER BY employee_id ASC\n\nskill : WHERE NOT IN \u7684\u7528\u6cd5 \u7d50\u5408 UNION\n\n*/\n")))}d.isMDXComponent=!0}}]);